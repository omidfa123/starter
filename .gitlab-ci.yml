stages:
  - build
  - test
  - deploy
  - testserver
  - production

build-job:
  image: npm:latest
  stage: build
  artifacts:
    name: "artifacts"
    paths:
      - .next/
  script:
    #- yarn install
    #- yarn run build
    #- echo "Compile complete."
    - echo "Success build"

unit-test-job:
  stage: test
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - echo "Code coverage is 90%"

deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
testserver-job:
  image: alpine:latest
  stage: testserver
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $MS7_HOST_ADDR >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "Success run before_script"
  script:
    - echo "Start clone with gitlab repository "
    - ssh -oStrictHostKeyChecking=no $SSH_USER@$MS7_HOST_ADDR -p $SSH_PORT "hostname && echo 'Welcome!!!' > gitlab.txt"
    - echo "SSH verify keys success"
  allow_failure: false
  when : on_success
  environment:
    name: root
    url: "${MS7_HOST_ADDR}"
  only:
    - main
production-job:
  image: alpine:latest
  stage: production
  extends: testserver-job
  script:
    - echo "Start clone with gitlab repository "
    - ssh -oStrictHostKeyChecking=no $SSH_USER@$MS7_HOST_ADDR -p $SSH_PORT "hostname && echo 'Welcome!!!' > gitlab.txt"
    - echo "ssh success"
    #- git clone http://gitlab-ci-token:${ms7_gitlab_token}@lab.rixoshop.com/atramart/ms7.git
    # - git pull origin master
    - git remote set-url origin ssh://"${SSH_USER}"@"${MS7_HOST_ADDR}":"${SSH_PORT}""${REPOSITORY_PATH}"
    - git checkout -b master
    - git push -f origin master
    - echo "push success"
   when : on_success
   environment:
     name: root
     url: "${MS7_HOST_ADDR}"
   only:
     - main
